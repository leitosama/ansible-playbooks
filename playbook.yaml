- name: Configure users
  hosts: linux
  gather_facts: false
  vars:
    ansible_ssh_pass: "{{ old_password }}"
    service_accounts:
      - suconf
      - cadm
      - sadmin
  tasks:
    - name: Backup /etc/shadow
      ansible.builtin.fetch:
        src: /etc/shadow
        dest: ./shadows.bkp/shadow-{{ inventory_hostname }}
        flat: yes

    - name: Get all users
      ansible.builtin.getent:
        database: passwd

    - name: Filter passwd
      ansible.builtin.set_fact:
        login_users: "{{ login_users | default([]) + [item.key] }}"
      when: ("bash" in item.value[-1] or "zsh" in item.value[-1] or "/bin/sh" in item.value[-1])
      loop: "{{ lookup('dict', ansible_facts['getent_passwd']) | list }}"
      loop_control:
        loop_var: item

    - name: Add users from inventory.ini
      ansible.builtin.set_fact:
        chpasswd_users: "{{ chpasswd_users|default([]) + login_users | difference(service_accounts) }}"

    - name: Get chpasswd_users
      ansible.builtin.debug:
        msg: "{{ chpasswd_users }}"

    - name: Add user {{ new_user }}
      ansible.builtin.user:
        name: "{{ new_user }}"
        password: "{{ new_password | password_hash('sha512') }}"
        shell: /bin/bash
        update_password: on_create

    - name: Set sudoers for {{ new_user }}
      community.general.sudoers:
        name: "{{ new_user }}"
        user: "{{ new_user }}"
        commands: ALL
        nopassword: true

    - name: Change password for users
      ansible.builtin.user:
        name: "{{ user }}"
        password: "{{ new_password | password_hash('sha512') }}"
      loop: "{{ chpasswd_users }}"
      loop_control:
        loop_var: user

- name: Configure iptables
  hosts: linux
  strategy: free
  gather_facts: false
  tasks:
    - name: iptables ACCEPT ESTABLISHED
      ansible.builtin.iptables:
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT
        comment: Allow related and established connections

    - name: Set iptables ACCEPT ssh
      ansible.builtin.iptables:
        chain: INPUT
        protocol: tcp
        destination_port: "22"
        jump: ACCEPT
        comment: Allow SSH

    - name: Set iptables ACCEPT localhost
      ansible.builtin.iptables:
        chain: INPUT
        protocol: all
        destination: 127.0.0.1/8
        jump: ACCEPT
    - name: Set iptables ACCEPT ping
      ansible.builtin.iptables:
        chain: INPUT
        protocol: icmp
        jump: ACCEPT
        comment: Allow icmp Ping

    - name: Set iptables per host rules
      ansible.builtin.iptables:
        chain: INPUT
        protocol: tcp
        jump: ACCEPT
        comment: "Allow {{ ports }}"
        destination_ports: "{{ ports }}"

    - name: Set iptables DROP all
      ansible.builtin.iptables:
        chain: INPUT
        protocol: all
        jump: DROP

- name: Fix FTP vuln
  hosts: ftp
  strategy: free
  gather_facts: false
  tasks:
    - name: Fix /var/www/html mode
      ansible.builtin.file:
        name: /var/www/html
        mode: 0755

- name: Install tools
  hosts: linux
  strategy: free
  gather_facts: false
  tasks:
    - name: Download KESL
      ansible.builtin.get_url:
        url: "{{ kesl_link }}"
        dest: /tmp/kesl.sh
        mode: '+x'
    
    - name: Install KESL
      ansible.builtin.command: /bin/bash /tmp/kesl.sh
      args:
        creates: /opt/kaspersky/kesl/bin/kesl-setup.pl

    - name: Download klnagent
      ansible.builtin.get_url:
        url: "{{ klnagent_link }}"
        dest: /tmp/klnagent.sh
        mode: '+x'
    
    - name: Install klnagent
      ansible.builtin.command: /bin/bash /tmp/klnagent.sh
      args:
        creates: /opt/kaspersky/klnagent64/lib/bin/setup/postinstall.pl

    - name: Install velociraptor
      ansible.builtin.apt:
        deb: "{{ velociraptor_deb_link }}"

    # - name: Add wazuh keys to keyring
    #   ansible.builtin.apt_key:
    #     url: https://packages.wazuh.com/key/GPG-KEY-WAZUH

    # - name: Add wazuh repo 
    #   ansible.builtin.apt_repository:
    #     repo: deb https://packages.wazuh.com/4.x/apt/ stable main
    
    # - name: Install wazuh-agent
    #   ansible.builtin.apt:
    #     name:
    #       - wazuh-agent
    #       - auditd
    #       - audispd-plugins
    #   environment:
    #     WAZUH_MANAGER: "{{ wazuh_manager }}"
    
    # - name: Run systemd
    #   ansible.builtin.systemd_service:
    #     daemon_reload: true
    #     name: wazuh-agent
    #     enabled: true
    #     state: started
